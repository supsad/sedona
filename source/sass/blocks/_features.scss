// ol counter

$max-value: 20; // max 5 in figma

@for $i from 1 through $max-value {
  .features:nth-child(#{$i}) {
    .features__title::after {
      content: "\2014  â„–" + $i " \2014";
    }
  }
}

// Styles

.features {
  background-color: $basic-gray;

  // Remove last border

  &:last-child .features__description {
    border-bottom: 1px solid transparent;
  }
}

.features__wrapper {
  background-color: $extra-gray;

  // Tablet & Desktop

  @media (min-width: $viewport-tablet) {
    display: grid;
    grid-template-columns: minmax(min-content, 1fr) 2fr;
    grid-template-rows: min-content;

    &_second {
      grid-template-columns: 2fr minmax(min-content, 1fr);
    }
  }
}

.features__intro {
  position: relative;
  padding: 26px 0 0;
  text-align: center;

  // Tablet

  @media (min-width: $viewport-tablet) {
    padding: 42px 33px 63px;
  }

  // Desktop

  @media (min-width: $viewport-desktop) {
    padding: 43px 42px 62px;
  }

  &_primary,
  &_primary-low {
    color: $basic-white;
    background-color: $accent-blue;

    // Fixed numeric color

    .features__title::after {
      color: $basic-white;
    }

    // Border none to primary

    .features__description {
      border: none;
    }
  }

  &_primary {
    padding: 74px 12px 14px; // 90px to decorative shape

    // Mobile only decorative shape to primary

    @media (max-width: $viewport-mobile-only) {
      &::before {
        content: "";
        position: absolute;
        width: 100%;
        height: 40px;
        top: 0;
        left: 0;
        background-image: url("../../img/features/primary-feature-shape.svg");
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
      }
    }

    // Tablet

    @media (min-width: $viewport-tablet) {
      padding: 40px 32px 43px;
    }

    // Desktop

    @media (min-width: $viewport-desktop) {
      padding: 45px 52px 57px;
    }
  }

  &_primary-low {
    padding: 38px 15px 11px;

    // Tablet & Desktop

    @media (min-width: $viewport-tablet) {
      padding: 43px 36px 41px;
      order: 2;
    }

    // Desktop only

    @media (min-width: $viewport-desktop) {
      padding: 51px 78px 53px;
    }
  }
}

.features__title {
  font-weight: 700;
  font-size: 18px;
  line-height: 26px;

  @media (min-width: $viewport-tablet) {
    font-size: 21px;
  }

  // Styles for counter

  &::after {
    display: block;
    margin: 11px 0 17px;

    font-weight: 400;
    font-size: 14px;
    line-height: 21px;
    color: $dark-gray;
  }
}

.features__title,
.features__description {
  margin: 0;
}

.features__description {
  font-weight: 400;
  font-size: 14px;
  line-height: 21px;

  // Border in none primary features

  @media (max-width: $viewport-mobile-only) {
    border-bottom: 1px solid $medium-gray-100;
    padding-bottom: 25px;
  }
}

// I need an adaptive block with an image that cover
// But I did not find a common way to do this
// So I found a solution through a revert-layer
// This is a new property that many browsers don't support
// But somehow it resets the height to its default value and works on all browsers

.features__img {
  display: block;
  object-fit: cover;
  height: revert-layer;
  min-height: 100%;
}

.features__list {
  display: grid;
  align-items: baseline;
  padding: 0 20px;

  background-color: $basic-white;
  list-style: none;

  // Mobile only

  @media (max-width: $viewport-mobile-only) {
    grid-template-rows: repeat(3, min-content);
    padding: 26px 21px 21px;
  }

  // Tablet & Desktop

  @media (min-width: $viewport-tablet) {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 20px;
  }
}

.features__item {
  // Mobile only pos

  @media (max-width: $viewport-mobile-only) {
    &:last-of-type {
      grid-row: 2 / 3;
    }
  }

  // Tablet & Desktop

  @media (min-width: $viewport-tablet) {
    text-align: center;
  }
}
